{"is_source_file": true, "format": "Python (Django REST Framework)", "description": "This source file contains API view functions for handling user profiles, bookings, payments, and related operations in a Tatkal railway booking system. It includes endpoints for health checks, user profile CRUD, booking creation and status tracking, auto-fill suggestions, and payment processing with mocked Razorpay integration.", "external_files": ["rest_framework.decorators", "rest_framework.permissions", "rest_framework.response", "django.contrib.auth.models", ".models", ".serializers"], "external_methods": ["api_view", "permission_classes", "AllowAny", "Response", "User.objects.get", "User.objects.filter", "User.objects.create", "User.set_password", "User.save", "User.delete", "UserProfile.objects.all", "UserProfile.objects.get", "UserProfile.save", "UserProfile.delete", "TatkalBookingSerializer", "UserProfileSerializer", "PaymentTransactionSerializer", "PaymentTransaction.objects.create", "PaymentTransaction.save", "PaymentTransaction.objects.get", "random.choices", "string.ascii_lowercase", "string.digits", "datetime", "datetime.datetime"], "published": ["health", "user_profile_list_create", "user_profile_detail", "tatkal_booking_create", "tatkal_booking_status", "tatkal_booking_cancel", "auto_fill_suggestions", "payment_initiate", "payment_callback", "payment_status"], "classes": [], "methods": [{"name": "health(request)", "description": "API health check endpoint that returns a simple message indicating server status.", "scope": "", "scopeKind": ""}, {"name": "user_profile_list_create(request)", "description": "Handles retrieving all user profiles and creating a new user profile with associated User object; performs validation and duplicate checks.", "scope": "", "scopeKind": ""}, {"name": "user_profile_detail(request, user_id)", "description": "Retrieve, update, or delete a specific user profile identified by user_id.", "scope": "", "scopeKind": ""}, {"name": "tatkal_booking_create(request)", "description": "Creates a new Tatkal booking with validated data, setting initial status to payment_pending.", "scope": "", "scopeKind": ""}, {"name": "tatkal_booking_status(request, booking_id)", "description": "Fetches details of a booking by ID, including status and PNR if available.", "scope": "", "scopeKind": ""}, {"name": "tatkal_booking_cancel(request, booking_id)", "description": "Cancels an existing booking if it is in an allowable state, updates status to cancelled, and records feedback.", "scope": "", "scopeKind": ""}, {"name": "auto_fill_suggestions(request, user_profile_id)", "description": "Provides auto-fill profile data on GET, or updates auto-fill setting on POST for a user profile.", "scope": "", "scopeKind": ""}, {"name": "payment_initiate(request)", "description": "Simulates initiation of a Razorpay payment; creates a mock order and returns a payment URL.", "scope": "", "scopeKind": ""}, {"name": "payment_callback(request)", "description": "Handles mock payment callback, updates transaction and booking statuses, assigns dummy PNR for successful payments.", "scope": "", "scopeKind": ""}, {"name": "payment_status(request, payment_transaction_id)", "description": "Returns the status details of a payment transaction by its ID.", "scope": "", "scopeKind": ""}], "calls": ["Response", "UserProfile.objects.all", "User.objects.get", "User.objects.filter", "User.set_password", "User.save", "UserProfileSerializer", "TatkalBookingSerializer", "PaymentTransactionSerializer", "PaymentTransaction.objects.create", "PaymentTransaction.objects.get", "random.choices", "datetime.datetime.now"], "search-terms": ["TatkalBooking", "user_profile", "payment_transaction", "auto_fill", " Razorpay", "payment", "booking", "PNR", "status", "callback", "CRON", "REST API"], "state": 2, "file_id": 9, "knowledge_revision": 41, "git_revision": "1ee4a38a356272713b6d744916e471d3c147316f", "revision_history": [{"26": "1ee4a38a356272713b6d744916e471d3c147316f"}, {"41": "1ee4a38a356272713b6d744916e471d3c147316f"}], "ctags": [{"_type": "tag", "name": "RAZORPAY_MOCK_KEY", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^RAZORPAY_MOCK_KEY = \"rzp_test_mocked\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "RAZORPAY_MOCK_SECRET", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^RAZORPAY_MOCK_SECRET = \"secret_key_mocked\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "auto_fill_suggestions", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^def auto_fill_suggestions(request, user_profile_id):$/", "language": "Python", "kind": "function", "signature": "(request, user_profile_id)"}, {"_type": "tag", "name": "drf_status", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^from rest_framework import status as drf_status$/", "language": "Python", "kind": "unknown", "nameref": "unknown:status"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^def health(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "payment_callback", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^def payment_callback(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "payment_initiate", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^def payment_initiate(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "payment_status", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^def payment_status(request, payment_transaction_id):$/", "language": "Python", "kind": "function", "signature": "(request, payment_transaction_id)"}, {"_type": "tag", "name": "tatkal_booking_cancel", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^def tatkal_booking_cancel(request, booking_id):$/", "language": "Python", "kind": "function", "signature": "(request, booking_id)"}, {"_type": "tag", "name": "tatkal_booking_create", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^def tatkal_booking_create(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "tatkal_booking_status", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^def tatkal_booking_status(request, booking_id):$/", "language": "Python", "kind": "function", "signature": "(request, booking_id)"}, {"_type": "tag", "name": "user_profile_detail", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^def user_profile_detail(request, user_id):$/", "language": "Python", "kind": "function", "signature": "(request, user_id)"}, {"_type": "tag", "name": "user_profile_list_create", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/views.py", "pattern": "/^def user_profile_list_create(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}], "hash": "c7db03c0fc9a923f4764ba19e0f33acf", "format-version": 4, "code-base-name": "backend", "filename": "backend/api/views.py", "fields": [{"name": "RAZORPAY_MOCK_KEY = \"rzp_test_mocked\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "RAZORPAY_MOCK_SECRET = \"secret_key_mocked\"", "scope": "", "scopeKind": "", "description": "unavailable"}]}
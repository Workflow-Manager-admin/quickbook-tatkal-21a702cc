{"is_source_file": true, "format": "Python", "description": "This file contains test cases for the backend API, specifically testing the health check endpoint.", "external_files": ["rest_framework.test", "django.urls"], "external_methods": ["reverse"], "published": [], "classes": [{"name": "HealthTests", "description": "Test case class for the health endpoint of the API."}], "methods": [{"name": "test_health(self)", "description": "Tests that the health endpoint responds with status code 200 and the message 'Server is up!'.", "scope": "HealthTests", "scopeKind": "class"}], "calls": ["django.urls.reverse", "self.client.get", "self.assertEqual"], "search-terms": ["APITestCase", "HealthTests", "test_health", "api", "tests"], "state": 2, "file_id": 7, "knowledge_revision": 24, "git_revision": "1ee4a38a356272713b6d744916e471d3c147316f", "ctags": [{"_type": "tag", "name": "HealthTests", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/tests.py", "pattern": "/^class HealthTests(APITestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "test_health", "path": "/home/kavia/workspace/code-generation/quickbook-tatkal-21a702cc/backend/api/tests.py", "pattern": "/^    def test_health(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "HealthTests", "scopeKind": "class"}], "hash": "b0c02c3b65708d78df1a568b3703f788", "format-version": 4, "code-base-name": "backend", "filename": "backend/api/tests.py", "revision_history": [{"24": "1ee4a38a356272713b6d744916e471d3c147316f"}]}